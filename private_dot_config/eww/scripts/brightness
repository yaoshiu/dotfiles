#!/bin/sh

# Path to the named pipe
EVENT_PIPE="/tmp/brightness_event"

# Function to monitor brightness changes
monitor_brightness() {
  # Create the named pipe if it doesn't exist
  if [ ! -p "$EVENT_PIPE" ]; then
    mkfifo "$EVENT_PIPE"
  fi

  # Output the current brightness percentage using brightnessctl
  output_brightness

  # Listen for events
  while true; do
    if read -r event <"$EVENT_PIPE"; then
      if [ "$event" = "brightness_changed" ]; then
        # Output brightness when an event is received
        output_brightness
      fi
    fi
  done
}

# Function to output the current brightness percentage
output_brightness() {
  BRIGHTNESS=$(brightnessctl -m | cut -d, -f4 | tr -d '%')
  echo "$BRIGHTNESS"
}

# Function to set the brightness
set_brightness() {
  NEW_BRIGHTNESS=$1

  # Adjust the brightness using brightnessctl
  brightnessctl set "$NEW_BRIGHTNESS"

  # Send a notification to the monitor through the named pipe
  if [ -p "$EVENT_PIPE" ]; then
    echo "brightness_changed" >"$EVENT_PIPE"
  fi
}

# Main script logic for subcommands
if [ "$1" = "monitor" ]; then
  # If the first argument is "monitor", start monitoring
  monitor_brightness
elif [ "$1" = "set" ] && [ -n "$2" ]; then
  # If the first argument is "set" and a second argument is provided, set the brightness
  set_brightness "$2"
else
  echo "Usage: $0 {monitor|set <value>}"
  exit 1
fi
